@use "sass:math";

// Подключение миксинов ===========================================================================================================================================================================================================================================================================
@import "base/mixins";

// Подключение шрифтов ===========================================================================================================================================================================================================================================================================
//&display=swap - добавить при подключении через плагин

// Подключить если есть локальные файлы шрифтов
//@import "fonts/fonts";

// Подключение иконочных шрифтов ==============================================================================================================================================================================================================================================================================
// Подключить если есть файл иконочного шрифта
//@import "fonts/icons";

// ============================================================================================================================================================================================================================================================================================================================================================================================
// Настройки шаблона ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================

// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================
$fontFamily: "Montserrat";
$fontSize: rem(20); // где 14(px) - размер шрифта по умолчанию из макета

// Основные цвета
$mainColor: var(--text-black); // Цвет шрифта по умолчанию


// Настройки адаптивной сетки ===============================================================================================================================================================================================================================================================================================

// Минимальная ширина страницы
$minWidth: 375;
// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1600;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 40;

// Ширина срабатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em($containerWidth); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$laptopL: em(1439.98);
$laptop: em(1279.98);
$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileMiddle: em(578.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;

// css переменные
@import "base/variables";
// ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================

// Обнуление ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import "base/null";

// Стили тега BODY ============================================================================================================================================================================================================================================================================================================================================================================================

body {

	// Скролл заблокирован
	.lock & {
		overflow: hidden;
		touch-action: none;
		overscroll-behavior: none;
	}

	// Сайт загружен
	.loaded & {}
}

// Оболочка wrapper ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
	min-height: 100%;
	display: flex;
	flex-direction: column;
	overflow: hidden;
	padding-left: var(--left-cat-btn);

	@supports (overflow: clip) {
		overflow: clip;
	}

	// Прижимаем footer
	>main {
		flex: 1 1 auto;
	}

	// Фикс для слайдеров
	>* {
		min-width: 0;
	}
}

.page {
	padding-top: calc(51px + var(--header-height));

	@media (max-width:$tablet) {
		padding-top: rem(25);
	}
}

// Ограничивающий контейнер ======================================================================================================================================================================================================================

/*
(i) Стили будут применяться ко 
всем классам содержащим *__container
Например header__container, main__container и т.д.
Снипет (HTML): cnt
*/
@if ($responsiveType==1) {

	// Отзывчивая
	[class*="__container"] {
		@if ($maxWidthContainer>0) {
			@include adaptiveValue("padding-left", 85, 54, 0, 1920, $containerWidth);
			@include adaptiveValue("padding-right", 85, 40, 0, 1920, $containerWidth);

			@media (max-width:$pc) {
				padding-left: rem(55);
				@include adaptiveValue("padding-right", 40, 40, 0, $containerWidth, 1280);
			}

			@media (max-width:$laptop) {
				@include adaptiveValue("padding-left", 40, 30, 0, 1280, 992);
				@include adaptiveValue("padding-right", 40, 30, 0, 1280, 992);
			}

			@media (max-width:$tablet) {
				padding: 0 rem(30);
			}

			@media (max-width:$mobileMiddle) {
				padding: 0 rem(20);
			}
		}

		// @if ($containerPadding>0) {
		// 	@if ($maxWidthContainer>0) {
		// 		padding: 0 rem(math.div($containerPadding, 2));

		// 	}

		// 	@else {
		// 		@include adaptiveValue("padding-left", math.div($containerPadding, 2), 15);
		// 		@include adaptiveValue("padding-right", math.div($containerPadding, 2), 15);
		// 	}
		// }
	}
}

@else {

	// По брейк-поинтам
	[class*="__container"] {
		margin: 0 auto;

		@if ($maxWidthContainer>0) {
			max-width: rem($containerWidth);
		}

		@else {
			@if ($containerPadding>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}

		@media (max-width: $pc) {
			max-width: rem(970);
		}

		@media (max-width: $tablet) {
			max-width: rem(750);
		}

		@media (max-width: $mobile) {
			max-width: none;

			@if ($containerPadding>0 and $maxWidthContainer>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
	}
}

// Подключение базовых стилей, шаблонов (заготовок) и вспомогательных  классов
// Для подключения/отключения конкретных стилей смотри base.scss
@import "base";

// Подключение стилей общих элементов проекта
@import "common";

// Подключение стилей отдельных блоков
@import "header";
@import "footer";
@import "sidebar-catalog";
@import "breadcrumbs";
@import "base/pagging";
@import "product-card";
@import "product-slider";

// Подключение стилей отдельных страниц
@import "home";
@import "catalog";
@import "catalog-first";
@import "product";
@import "brands";
@import "brand-detail";
@import "contacts";
@import "cabinet";
@import "order";
@import "faq";
@import "about";
@import "del-exch";
@import "favorites";